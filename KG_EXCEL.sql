USE [REPORTS]
GO

/****** Object:  StoredProcedure [dbo].[PRC_KG_EXCEL]    Script Date: 03.02.2020 16:42:45 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO







ALTER PROCEDURE [dbo].[PRC_KG_EXCEL] AS 
BEGIN

--SELECT * FROM REPORTS.dbo.T_WHS_TEST_KG
--NEWBIE.dbo.TD_T_COMPETITOR_RDM3782


-- ======================================== Период ============================= --
IF OBJECT_ID(N'TEMPDB..#DAY_60',N'U') IS NOT NULL DROP TABLE TEMPDB..#DAY_60;	--	 SELECT * FROM #DAY_60
SELECT MIN (DAY_ID) AS DT1
	 , MAX (DAY_ID) AS DT2
INTO #DAY_60
FROM (
		SELECT DAY_ID
			 , ROW_NUMBER () OVER (ORDER BY DAY_ID DESC) AS RN
		FROM SOURCES.dbo.V_DAYS AS d
		INNER JOIN (
						SELECT MONTH_ID
						FROM SOURCES.dbo.V_MONTHS
						WHERE MONTH_NUMBER NOT IN (1,12)
					) AS m
			ON d.MONTH_ID = m.MONTH_ID
		WHERE 1=1 
			--AND DAY_ID BETWEEN DATEADD (m, -2, CAST (GETDATE() AS DATE)) AND DATEADD (d, -1, CAST (GETDATE() AS DATE))
			AND DAY_ID < CAST (GETDATE () AS DATE)
			--AND MONTH_ID NOT IN (201812, 201901)
	 ) AS a
WHERE RN <= 60
;

-- ================================ Конкуренты TD =======================
IF OBJECT_ID(N'TEMPDB..#COMP_REL',N'U') IS NOT NULL DROP TABLE TEMPDB..#COMP_REL;
SELECT DISTINCT
  w.WHS_ID
, s.COMPETITOR_ID
, s.COMP_NAME
, s.ECHELON
, iif(s.ECHELON<>'',LEFT(s.ECHELON,1),null) AS ECHELON_REL_ID
INTO #COMP_REL --SELECT * FROM #COMP_REL
FROM NEWBIE.dbo.TD_T_COMPETITOR_RDM3782 AS s
INNER JOIN SOURCES.dbo.V_WHS AS w
	ON s.CODE = w.CODE
--WHERE w.WHS_ID = 468168


-- ===============================  Состав ТЕСТОВ =======================
IF OBJECT_ID(N'TEMPDB..#TEST',N'U') IS NOT NULL DROP TABLE TEMPDB..#TEST;	--SELECT * FROM #TEST
SELECT DISTINCT
  a.WHS_ID
, a.CODE
, a.FRMT_ID
, COALESCE (test.SUBFRMT_ID, a.SUBFRMT_ID) AS SUBFRMT_ID
, a.RC_NAME
, a.RC_CNTR_ID
, a.OPEN_DT
, a.CLOSE_DT
, a.SQUARE_TRADE
, a.CITY_ID
, a.REGION_ID
, test.METR AS METR_EX
, test.POTENTIAL AS POTENTIAL_EX
, CASE WHEN BRANCH_ID IN (68,2411,320,2409,2413,2410,322,69) THEN 68
--	 WHEN BRANCH_ID IN (68,320,69,2411,322) THEN 68
--	 WHEN BRANCH_ID IN (2417,7) THEN 7
--	 WHEN BRANCH_ID IN (2415,2) THEN 2
--	 WHEN BRANCH_ID IN (330,27) THEN 27
	 ELSE BRANCH_ID END AS BRANCH_ID
, COALESCE(rel.COMPETITOR_ID,a.COMPETITOR_ID) AS COMPETITOR_ID
, COALESCE(rel.COMP_NAME,a.COMPETITOR_NAME) AS COMPETITOR_NAME
, COALESCE(rel.ECHELON_REL_ID, iif(a.COMPETITOR_GRP_NAME<>'',LEFT(a.COMPETITOR_GRP_NAME,1),null),LEFT(comp.ECHELON,1),0) AS COMPETITOR_ECHELON_ID 
, CASE  WHEN b.LOCAL_FAMILY_BUDGET = '1 кат.' THEN 1
		WHEN b.LOCAL_FAMILY_BUDGET = '2 кат.' THEN 2
		WHEN b.LOCAL_FAMILY_BUDGET = '3 кат.' THEN 3
		WHEN b.LOCAL_FAMILY_BUDGET = '4 кат.' THEN 4
		ELSE NULL END AS LOCAL_FAMILY_BUDGET
, CASE  WHEN b.LOCAL_FAMILY_BUDGET IN ('1 кат.', '2 кат.') THEN 1
		WHEN b.LOCAL_FAMILY_BUDGET IN ('3 кат.', '4 кат.') THEN 2
		ELSE NULL END AS LOCAL_FAMILY_BUDGET2
, b.HAS_ALCO_LICENCE
, b.SIZE_OF_POPULATION
, CASE WHEN b.SEASON_TYPE_NAME IS NULL OR b.SEASON_TYPE_NAME = 'Не сезон' THEN 1 ELSE 2 END AS SEASON
, p.TYPE_CITY AS SIZE_OF_POPULATION_TYPE2
, CASE WHEN b.SIZE_OF_POPULATION < 100000 THEN 1 
	   WHEN b.SIZE_OF_POPULATION BETWEEN 100000 AND 500000 THEN 2
	   WHEN b.SIZE_OF_POPULATION > 500000 THEN 3
	   ELSE 4
	   END AS SIZE_OF_POPULATION_TYPE
INTO #TEST
FROM SOURCES.DBO.V_WHS AS a
INNER JOIN SOURCES.dbo.V_SM_DIVISION AS b
	ON a.WHS_ID = b.WHS_ID
INNER JOIN SOURCES.dbo.V_PLACE_PASSPORT AS p
	ON a.WHS_ID = p.WHS_ID
INNER JOIN REPORTS.dbo.T_WHS_TEST_KG AS test
	ON a.WHS_ID = test.WHS_ID
LEFT JOIN ( 
				SELECT *
				FROM (
						SELECT c.WHS_ID
							 , d.ECHELON
							 , c.COMPETITOR_FULL_NAME
							 , c.MIN_DIST_KM
							 , ROW_NUMBER () OVER (PARTITION BY WHS_ID ORDER BY WHS_ID, CASE WHEN d.ECHELON IN ('1-ый эшелон','2-ой эшелон') THEN 1 ELSE 2 END, MIN_DIST_KM) AS RN
						FROM SOURCES.dbo.V_WHS_COMPETITOR as c
						INNER JOIN SOURCES.dbo.V_COMPETITOR AS d
							ON c.COMPETITOR_ID = d.COMPETITOR_ID
						WHERE 1=1
						 AND OPEN_DT < GETDATE()
						 AND d.ECHELON IS NOT NULL
					) AS a
				WHERE a.RN = 1
			) AS comp
	ON a.WHS_ID = comp.WHS_ID
LEFT JOIN #COMP_REL AS rel
	ON a.WHS_ID = rel.WHS_ID;
--====================================== СОСТАВ АНАЛОГОВ ===========================================

IF OBJECT_ID(N'TEMPDB..#ANALOG',N'U') IS NOT NULL DROP TABLE TEMPDB..#ANALOG;	--	SELECT * FROM #ANALOG
SELECT DISTINCT
  a.WHS_ID 
, a.CODE
, a.FRMT_ID
, a.SUBFRMT_ID
, a.RC_NAME
, a.RC_CNTR_ID
, a.OPEN_DT
, a.CLOSE_DT
, a.SQUARE_TRADE
, a.CITY_ID
, a.REGION_ID
, CASE WHEN BRANCH_ID IN (68,2411,320,2409,2413,2410,322,69) THEN 68
--	 WHEN BRANCH_ID IN (68,320,69,2411,322) THEN 68
--	 WHEN BRANCH_ID IN (2417,7) THEN 7
--	 WHEN BRANCH_ID IN (2415,2) THEN 2
--	 WHEN BRANCH_ID IN (330,27) THEN 27
	 ELSE BRANCH_ID END AS BRANCH_ID
, a.COMPETITOR_ID
, a.COMPETITOR_NAME
, COALESCE(iif(A.COMPETITOR_GRP_NAME<>'',LEFT(A.COMPETITOR_GRP_NAME,1),null),LEFT(comp.ECHELON,1),0) AS COMPETITOR_ECHELON_ID 
, CASE WHEN b.LOCAL_FAMILY_BUDGET = '1 кат.' THEN 1
					WHEN b.LOCAL_FAMILY_BUDGET = '2 кат.' THEN 2
					WHEN b.LOCAL_FAMILY_BUDGET = '3 кат.' THEN 3
					WHEN b.LOCAL_FAMILY_BUDGET = '4 кат.' THEN 4
					ELSE NULL END AS LOCAL_FAMILY_BUDGET
, CASE  WHEN b.LOCAL_FAMILY_BUDGET IN ('1 кат.', '2 кат.') THEN 1
		WHEN b.LOCAL_FAMILY_BUDGET IN ('3 кат.', '4 кат.') THEN 2
		ELSE NULL END AS LOCAL_FAMILY_BUDGET2
, b.HAS_ALCO_LICENCE
, b.SIZE_OF_POPULATION
, CASE WHEN b.SEASON_TYPE_NAME IS NULL OR B.SEASON_TYPE_NAME = 'Не сезон' THEN 1 ELSE 2 END AS SEASON
, p.TYPE_CITY AS SIZE_OF_POPULATION_TYPE2
, CASE WHEN b.SIZE_OF_POPULATION < 100000 THEN 1 
	   WHEN b.SIZE_OF_POPULATION BETWEEN 100000 AND 500000 THEN 2
	   WHEN b.SIZE_OF_POPULATION > 500000 THEN 3
	   ELSE 4
	   END AS SIZE_OF_POPULATION_TYPE
, DATEADD (d, +1, EOMONTH ( DATEADD (m, -3, DT1))) AS dt1
INTO #ANALOG
FROM SOURCES.DBO.V_WHS AS a
INNER JOIN SOURCES.DBO.V_SM_DIVISION AS b
	ON a.WHS_ID = b.WHS_ID 
INNER JOIN SOURCES.dbo.V_PLACE_PASSPORT AS p
	ON a.WHS_ID = p.WHS_ID
LEFT JOIN ( 
				SELECT *
				FROM (
						SELECT c.WHS_ID
							 , d.ECHELON
							 , c.COMPETITOR_FULL_NAME
							 , c.MIN_DIST_KM
							 , ROW_NUMBER () OVER (PARTITION BY WHS_ID ORDER BY WHS_ID, CASE WHEN d.ECHELON IN ('1-ый эшелон','2-ой эшелон') THEN 1 ELSE 2 END, MIN_DIST_KM) AS RN
						FROM SOURCES.dbo.V_WHS_COMPETITOR as c
						INNER JOIN SOURCES.dbo.V_COMPETITOR AS d
							ON c.COMPETITOR_ID = d.COMPETITOR_ID
						WHERE 1=1
						 AND OPEN_DT < GETDATE()
						 AND d.ECHELON IS NOT NULL
					) AS a
				WHERE a.RN = 1
			) AS comp
	ON a.WHS_ID = comp.WHS_ID
LEFT JOIN REPORTS.dbo.T_WHS_TEST_KG AS test
	ON a.WHS_ID = test.WHS_ID
LEFT JOIN #DAY_60 AS d
	ON 1=1
WHERE a.FRMT_ID = 1
	AND (b.SEASON_TYPE_NAME IS NULL OR b.SEASON_TYPE_NAME = 'Не сезон')
	AND a.WORKING = 1
	AND test.WHS_ID IS NULL
	AND a.OPEN_DT < DATEADD (d, +1, EOMONTH ( DATEADD (m, -3, DT1)))
--	AND a.WHS_ID = 7119
;
----========================= Тест - Аналог - Период ================================--

IF OBJECT_ID(N'TEMPDB..#TEST_ANALOG',N'U') IS NOT NULL DROP TABLE TEMPDB..#TEST_ANALOG;
SELECT  DISTINCT
				TEST.WHS_ID
			 , TEST.BRANCH_ID
			 , TEST.COMPETITOR_ID
			 , TEST.COMPETITOR_ECHELON_ID
			 , TEST.SUBFRMT_ID
			 , TEST.RC_CNTR_ID
			 , TEST.SQUARE_TRADE
			 , TEST.REGION_ID
			 , TEST.CITY_ID
			 , TEST.SIZE_OF_POPULATION_TYPE
			 , TEST.SIZE_OF_POPULATION_TYPE2
			 , TEST.SEASON
			 , TEST.LOCAL_FAMILY_BUDGET
			 , tEST.LOCAL_FAMILY_BUDGET2
			 , TEST.HAS_ALCO_LICENCE
			 , TEST.OPEN_DT -- Период
			 , ANG.WHS_ID AS WHS_ID_ANG
			 , ANG.BRANCH_ID AS BRANCH_ID_ANG
			 , ANG.COMPETITOR_ID AS COMPETITOR_ID_ANG
			 , ANG.COMPETITOR_ECHELON_ID AS COMPETITOR_ECHELON_ID_ANG
			 , ANG.SUBFRMT_ID AS SUBFRMT_ID_ANG
			 , ANG.RC_CNTR_ID AS RC_CNTR_ID_ANG
			 , ANG.SQUARE_TRADE AS SQUARE_TRADE_ANG
			 , ANG.REGION_ID AS REGION_ID_ANG
			 , ANG.CITY_ID AS CITY_ID_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE AS SIZE_OF_POPULATION_TYPE_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE2 AS SIZE_OF_POPULATION_TYPE2_ANG
			 , ANG.SEASON AS SEASON_ANG
			 , ANG.LOCAL_FAMILY_BUDGET AS LOCAL_FAMILY_BUDGET_ANG
			 , ANG.LOCAL_FAMILY_BUDGET2 AS LOCAL_FAMILY_BUDGET2_ANG
			 , ANG.HAS_ALCO_LICENCE AS HAS_ALCO_LICENCE_ANG
			 , ANG.OPEN_DT AS OPEN_DT_ANG
			INTO #TEST_ANALOG
			FROM (
					SELECT M.WHS_ID
						, M.BRANCH_ID
						, M.COMPETITOR_ID 
						, M.COMPETITOR_ECHELON_ID 
						, M.SUBFRMT_ID
						, M.RC_CNTR_ID
						, M.REGION_ID
						, M.CITY_ID
						, M.SQUARE_TRADE 
						, M.SIZE_OF_POPULATION_TYPE
						, M.SIZE_OF_POPULATION_TYPE2
						, M.SEASON
						, M.LOCAL_FAMILY_BUDGET
						, M.LOCAL_FAMILY_BUDGET2
						, M.HAS_ALCO_LICENCE
						, M.OPEN_DT
					FROM #TEST AS M
					LEFT JOIN SOURCES.DBO.V_WHS AS T 
						ON T.WHS_ID = M.WHS_ID
				 ) AS TEST
			LEFT JOIN (	
						SELECT M.WHS_ID
							, M.BRANCH_ID
							, M.COMPETITOR_ID 
							, M.COMPETITOR_ECHELON_ID 
							, M.SUBFRMT_ID
							, M.RC_CNTR_ID
							, M.REGION_ID
							, M.CITY_ID
							, M.SQUARE_TRADE
							, M.SIZE_OF_POPULATION_TYPE
							, M.SIZE_OF_POPULATION_TYPE2
							, M.SEASON
							, M.LOCAL_FAMILY_BUDGET
							, M.LOCAL_FAMILY_BUDGET2
							, M.HAS_ALCO_LICENCE
							, m.OPEN_DT
						FROM #ANALOG AS M
					) AS ANG
			ON 
					TEST.RC_CNTR_ID = ANG.RC_CNTR_ID
				AND TEST.BRANCH_ID = ANG.BRANCH_ID;


--================================== Дистанция =============================--
IF OBJECT_ID(N'TEMPDB..#DIST',N'U') IS NOT NULL DROP TABLE TEMPDB..#DIST;
SELECT WHS_ID
	 , NAME
	 , WHS_ID_ANG
	 , NAME_ANG
	 , ATN2(
			SQRT(
                POWER((COS(PI() * LAT2 / 180) * SIN(PI() * LONG2 / 180 - PI() * LONG1 / 180)),2) +
                POWER((
                    COS(PI() * LAT1 / 180) *
                    SIN(PI() * LAT2 / 180) -
                    SIN(PI() * LAT1 / 180) *
                    COS(PI() * LAT2 / 180) *
                    COS(ABS(PI() * LONG2 / 180 - PI() * LONG1 / 180))
                ) , 2)
            ),
            SIN(PI() * LAT1 / 180) *
            SIN(PI() * LAT2 / 180) +
            COS(PI() * LAT1 / 180) *
            COS(PI() * LAT2 / 180) *
            COS(ABS(PI() * LONG2 - PI() * LONG1 )/ 180)
            ) * 6372795/1000 AS  DIST_KM
INTO #DIST
FROM (
		SELECT a.WHS_ID
			 , a.NAME
			 , b.WHS_ID AS WHS_ID_ANG
			 , b.NAME AS NAME_ANG
			 , CAST(A.X AS FLOAT) AS LONG1
			 , CAST(A.Y AS FLOAT) AS LAT1
			 , CAST(B.X AS FLOAT) AS LONG2
			 , CAST(B.Y AS FLOAT) AS  LAT2
		FROM (
				SELECT a.WHS_ID
					 , a.NAME
					 , a.X
					 , a.Y
				FROM SOURCES.dbo.V_PLACE_PASSPORT AS a
				INNER JOIN (SELECT DISTINCT WHS_ID FROM #TEST) AS b
					ON a.WHS_ID = b.WHS_ID
			  ) AS a -- ТЕСТ
		 CROSS JOIN
				(
					SELECT a.WHS_ID
						 , a.NAME
						 , a.X
						 , a.Y
					FROM SOURCES.dbo.V_PLACE_PASSPORT AS a
					INNER JOIN (SELECT DISTINCT WHS_ID FROM #ANALOG) AS b
						ON a.WHS_ID = b.WHS_ID
				) AS b --АНАЛОГ
		) AS a;


--====================================================== СТОП ЛИСТ =======================================================--

IF OBJECT_ID(N'TEMPDB..#SL',N'U') IS NOT NULL DROP TABLE TEMPDB..#SL;
SELECT DISTINCT WHS_ANALOG
INTO #SL
FROM (
		SELECT a.WHS_ID AS WHS_ANALOG
			 , SUM(CASE WHEN STL.DAY_ID BETWEEN d.DT1 AND DT2 THEN 1 ELSE 0 END) AS STOP_LIST
		FROM #ANALOG AS a
		LEFT JOIN SOURCES.dbo.V_WHS_STATUS_LNK_DAYS_LIM AS stl
			ON a.WHS_ID = stl.WHS_ID
		INNER JOIN #DAY_60 AS d
			ON 1=1
		GROUP BY a.WHS_ID 
	) AS d
WHERE STOP_LIST > 0;


--=============================================== КОНКУРЕНТЫ =====================================================
IF OBJECT_ID(N'TEMPDB..#PERMANENT_COMPETITOR',N'U') IS NOT NULL DROP TABLE TEMPDB..#PERMANENT_COMPETITOR;
--- SELECT * FROM #PERMANENT_COMPETITOR WHERE WHS_ANALOG IS NULL
SELECT DISTINCT WHS_ANALOG
INTO #PERMANENT_COMPETITOR
FROM (
SELECT A.WHS_ID AS WHS_TEST
	 , B.WHS_ID AS WHS_ANALOG
	 , SUM(CASE 
		WHEN (C.ECHELON IN ('1-ый эшелон', '2-ой эшелон') OR C.ECHELON IS NULL) 
			AND (C.OPEN_DATE BETWEEN d.DT1 AND DT2 OR C.CLOSE_DATE BETWEEN d.DT1 AND DT2)
			AND C.FRMT_ID = 1
			AND C.SIZE_OF_POPULATION < 30000 
			AND C.MIN_DIST_KM <=3
			THEN 1 
		WHEN (C.ECHELON IN ('1-ый эшелон', '2-ой эшелон') OR C.ECHELON IS NULL) 
			AND (C.OPEN_DATE BETWEEN d.DT1 AND DT2 OR C.CLOSE_DATE BETWEEN d.DT1 AND DT2)
			AND C.FRMT_ID = 1
			AND C.SIZE_OF_POPULATION BETWEEN 30000 AND 100000
			AND C.MIN_DIST_KM <=1
			THEN 1 
		WHEN (C.ECHELON IN ('1-ый эшелон', '2-ой эшелон') OR C.ECHELON IS NULL) 
			AND (C.OPEN_DATE BETWEEN d.DT1 AND DT2 OR C.CLOSE_DATE BETWEEN d.DT1 AND DT2)
			AND C.FRMT_ID = 1
			AND C.SIZE_OF_POPULATION > 100000
			AND C.MIN_DIST_KM <=0.5
			THEN 1
		WHEN  (C.OPEN_DATE BETWEEN d.DT1 AND DT2 OR C.CLOSE_DATE BETWEEN d.DT1 AND DT2)
			AND C.FRMT_ID = 2
			AND C.SIZE_OF_POPULATION < 50000
			AND C.CITY_ID = B.CITY_ID
			THEN 1 
		WHEN  (C.OPEN_DATE BETWEEN d.DT1 AND DT2 OR C.CLOSE_DATE BETWEEN d.DT1 AND DT2)
			AND C.FRMT_ID = 2
			AND C.SIZE_OF_POPULATION BETWEEN 50000 AND 120000
			AND C.MIN_DIST_KM <=1.5
			THEN 1 
		WHEN  (C.OPEN_DATE BETWEEN d.DT1 AND DT2 OR C.CLOSE_DATE BETWEEN d.DT1 AND DT2)
			AND C.FRMT_ID = 2
			AND C.SIZE_OF_POPULATION > 120000
			AND C.MIN_DIST_KM <=1
			THEN 1 				 
			ELSE 0 END
	) compet
FROM #TEST AS A
LEFT JOIN #DAY_60 AS d
	ON 1=1
JOIN #ANALOG AS B
	ON A.BRANCH_ID = B.BRANCH_ID 
	AND A.SUBFRMT_ID = B.SUBFRMT_ID 
	AND A.RC_CNTR_ID = B.RC_CNTR_ID
LEFT JOIN (
		        SELECT  A.WHS_ID
						, A.COMPETITOR_STORE_ID 
						, A.ECHELON
						, A.OPEN_DATE
						, A.CLOSE_DATE
						, A.MIN_DIST_KM
						, A.FRMT_COMPET
						, FRMT.FRMT_ID
						, A.COMPETITOR_ID
						, B.CITY_ID
						, B.SIZE_OF_POPULATION
				FROM COMPETITOR.DBO.T_WHS_COMPETITOR AS A
				JOIN SOURCES.DBO.v_whs AS B 
						ON A.WHS_ID = B.WHS_ID 
				LEFT JOIN REPORTS.dbo.V_TD_FRMT_BY_LVL AS FRMT
						ON FRMT.SUBFRMT_ID = A.FRMT_COMPET                                                  
				WHERE  ( a.FRMT_COMPET in (38, 102, 31,43,40)  
											OR  FRMT.FRMT_ID = 1  ) 
               ) AS C
		ON B.WHS_ID = C.WHS_ID
GROUP BY A.WHS_ID, B.WHS_ID			              
) a 
where compet > 0;

--=================================================== РЕБРЕНДИНГ ===========================================--
IF OBJECT_ID(N'TEMPDB..#REBRANDING',N'U') IS NOT NULL DROP TABLE TEMPDB..#REBRANDING;	-- SELECT * FROM #REBRANDING
SELECT WHS_ID AS WHS_ID_ANG
	-- , DATE_CLOSE_FOR_REBRANDING
INTO #REBRANDING
FROM SOURCES.dbo.V_PLACE_PASSPORT
WHERE CAST(DATE_CLOSE_FOR_REBRANDING AS DATE) BETWEEN DATEADD (d, +1, EOMONTH ( DATEADD (m, -3, GETDATE()))) AND EOMONTH ( DATEADD (m, +1, GETDATE()))
UNION 
SELECT DISTINCT WHS_ID_ANG/*, DATEADD (d, -28, s.OPEN_DT), DATEADD (d, +28, s.OPEN_DT), OPEN_DT*/
FROM #TEST_ANALOG AS s
LEFT JOIN SOURCES.dbo.V_PLACE_PASSPORT AS pl
	ON s.WHS_ID_ANG = pl.WHS_ID
WHERE CAST(DATE_CLOSE_FOR_REBRANDING AS DATE) BETWEEN DATEADD (d, -28, s.OPEN_DT) AND DATEADD (d, +28, s.OPEN_DT)
;

--============================ Ребрендинговые ТТ =========================--
IF OBJECT_ID(N'TEMPDB..#REBRANDING_YES',N'U') IS NOT NULL DROP TABLE TEMPDB..#REBRANDING_YES;
SELECT WHS_ID
	 , CAST(DATA_REBRANDING AS DATE) AS DATA_REBRANDING
	 , REBRANDING
INTO #REBRANDING_YES
FROM SOURCES.dbo.V_PLACE_PASSPORT
WHERE REBRANDING = 'Да'
AND WHS_ID IS NOT NULL;

--======================================= СРЕДНЕСУТОЧНЫЙ ТРАФИК =================================================

IF OBJECT_ID(N'TEMPDB..#TRAFIK_FOR_ANALOG',N'U') IS NOT NULL DROP TABLE TEMPDB..#TRAFIK_FOR_ANALOG;	--	SELECT * FROM #TRAFIK_FOR_ANALOG

SELECT s.WHS_ID
	, AVG(s.SALES_COUNT) AS TRAFIC
INTO #TRAFIK_FOR_ANALOG
FROM SOURCES.dbo.V_SALES_COUNT AS s
INNER JOIN SOURCES.DBO.V_WHS AS w
		ON s.WHS_ID = w.WHS_ID 
		AND w.FRMT_ID = 1
WHERE s.DAY_ID BETWEEN DATEADD (d, +1, EOMONTH ( DATEADD (m, -3, GETDATE()))) AND EOMONTH ( DATEADD (m, -1, GETDATE()))
GROUP BY s.WHS_ID;

--======================================= СРЕДНЕСУТОЧНЫЕ ПРОДАЖИ =================================================

IF OBJECT_ID(N'TEMPDB..#SALE_FOR_ANALOG',N'U') IS NOT NULL DROP TABLE TEMPDB..#SALE_FOR_ANALOG;
SELECT s.WHS_ID
	, AVG(s.SALE) AS SALE
INTO #SALE_FOR_ANALOG
FROM SOURCES.dbo.V_SALE_WHS_DAY AS s
INNER JOIN SOURCES.dbo.V_WHS AS w
		ON s.WHS_ID = w.WHS_ID 
		AND W.FRMT_ID = 1
		AND w.WORKING = 1
LEFT JOIN #DAY_60 AS d
	ON 1=1
WHERE 1=1 --s.DAY_ID BETWEEN DATEADD (d, +1, EOMONTH ( DATEADD (m, -3, GETDATE()))) AND EOMONTH ( DATEADD (m, -1, GETDATE()))
	AND s.DAY_ID BETWEEN d.DT1 AND d.DT2
	AND s.DAY_ID NOT BETWEEN '2018-12-01' AND '2019-01-31'
GROUP BY s.WHS_ID;


--SELECT DATEADD (d, +1, EOMONTH ( DATEADD (m, -3, GETDATE())))
--SELECT EOMONTH ( DATEADD (m, -1, GETDATE()))

--======================================== МЕТРАЖ ПОЛОК ==================================================	

IF OBJECT_ID(N'TEMPDB..#GORKA',N'U') IS NOT NULL DROP TABLE TEMPDB..#GORKA;	--	SELECT * FROM #GORKA

SELECT
	e.WHS_ID
,	SUM (CASE WHEN TYPEOFEQ LIKE '%Полка стеллажная%' THEN e.METR END) AS METR
,	SUM (CASE WHEN TYPEOFEQ IN ('Бонета (замороженная продукция)','Бонета корзинная (замороженная продукция)','Бонета обрешетчатая (замороженная продукция)') THEN QTY END) AS QTY_Z
,	SUM (CASE WHEN TYPEOFEQ = 'Бонета (охлажденное мясо)' THEN QTY END) AS QTY_OHL
,	SUM (CASE WHEN TYPEOFEQ = 'Горка' THEN QTY END) AS QTY_GORKA
INTO #GORKA
FROM SOURCES.DBO.V_APS_EQUIPMENTS AS e		--	SELECT * FROM SOURCES.DBO.V_APS_EQUIPMENTS
INNER JOIN SOURCES.DBO.V_WHS AS w
		ON e.WHS_ID = w.WHS_ID
		AND w.FRMT_ID = 1
WHERE 1=1
		AND AVAILIBLE = 1
		AND CAST(e.DAY_ID AS DATE) = (SELECT DATEADD (d, -2, MAX(DAY_ID)) FROM SOURCES.DBO.V_APS_EQUIPMENTS)
GROUP BY e.WHS_ID;



--======================================== МЕТРАЖ ПОЛОК TEST ==================================================	

IF OBJECT_ID(N'TEMPDB..#GORKA_TEST',N'U') IS NOT NULL DROP TABLE TEMPDB..#GORKA_TEST; -- SELECT * FROM #GORKA_TEST		SELECT * FROM #TEST

SELECT
	e.WHS_ID
,	SUM (CASE WHEN TYPEOFEQ LIKE '%Полка стеллажная%' THEN NULLIF (e.METR, 0) END) AS METR
,	SUM (CASE WHEN TYPEOFEQ IN ('Бонета (замороженная продукция)','Бонета корзинная (замороженная продукция)','Бонета обрешетчатая (замороженная продукция)') THEN QTY END) AS QTY_Z
,	SUM (CASE WHEN TYPEOFEQ = 'Бонета (охлажденное мясо)' THEN QTY END) AS QTY_OHL
,	SUM (CASE WHEN TYPEOFEQ = 'Горка' THEN QTY END) AS QTY_GORKA
INTO #GORKA_TEST
FROM SOURCES.DBO.V_APS_EQUIPMENTS AS e
INNER JOIN #TEST AS test
	ON e.WHS_ID = test.WHS_ID
INNER JOIN SOURCES.DBO.V_WHS AS w
		ON e.WHS_ID = w.WHS_ID 
		AND w.FRMT_ID = 1
WHERE 1=1
		--AND AVAILIBLE = 1
		AND CAST(e.DAY_ID AS DATE) = (SELECT DATEADD (d, -2, MAX(DAY_ID)) FROM SOURCES.DBO.V_APS_EQUIPMENTS)
GROUP BY e.WHS_ID;

--======================================== Кол-во Горок ===============================================--

--Бонета (замороженная продукция)
--Бонета корзинная (замороженная продукция)
--Бонета обрешетчатая (замороженная продукция) 3

--Бонета (охлажденное мясо) 2

--Горка 1
--========================================== MAIN ==========================================================

IF OBJECT_ID(N'TEMPDB..#TTMAIN_ANALOG',N'U') IS NOT NULL DROP TABLE TEMPDB..#TTMAIN_ANALOG;
SELECT
	C.*
INTO #TTMAIN_ANALOG
FROM #ANALOG AS C
LEFT JOIN  #SL AS R 
	ON R.WHS_ANALOG = C.WHS_ID 
LEFT JOIN  #PERMANENT_COMPETITOR AS S 
	ON S.WHS_ANALOG = C.WHS_ID
LEFT JOIN  #REBRANDING AS CM 
	ON CM.WHS_ID_ANG = C.WHS_ID
WHERE 1=1
	  AND R.WHS_ANALOG IS NULL
	  AND S.WHS_ANALOG IS NULL
	  AND CM.WHS_ID_ANG IS NULL;

	  
TRUNCATE TABLE REPORTS.dbo.T_KG_EXCEL;		--	SELECT * FROM REPORTS.dbo.T_KG_EXCEL
INSERT INTO REPORTS.dbo.T_KG_EXCEL 
SELECT  DISTINCT
				TEST.WHS_ID
			 , TEST.CODE
			 , TEST.BRANCH_ID
			 , TEST.COMPETITOR_ID
			 , CASE WHEN TEST.COMPETITOR_ECHELON_ID = 1 THEN 1 
					WHEN TEST.COMPETITOR_ECHELON_ID = 2 THEN 2
					ELSE 3 END AS ECHELON_ID
			 , TEST.SUBFRMT_ID
			 , TEST.FRMT_ID
			 , TEST.RC_CNTR_ID
			 , TEST.SQUARE_TRADE
			 , TEST.REGION_ID
			 , TEST.CITY_ID
			 , TEST.SIZE_OF_POPULATION_TYPE
			 , TEST.SIZE_OF_POPULATION_TYPE2
			 , TEST.SEASON
			 , TEST.LOCAL_FAMILY_BUDGET
			 , TEST.LOCAL_FAMILY_BUDGET2
			 , TEST.HAS_ALCO_LICENCE
			 , TEST.KLIENT_ZEL AS TRAFIK
			 , TEST.POTENTIAL AS SALE
			 , TEST.METR
			 , TEST.QTY_GORKA
			 , TEST.QTY_OHL
			 , TEST.QTY_Z
			 , CASE WHEN re.WHS_ID IS NOT NULL THEN 1 ELSE 2 END AS FLAG_REBR
			 , ANG.WHS_ID AS WHS_ID_ANG
			 , ANG.CODE AS CODE_ANG
			 , ANG.BRANCH_ID AS BRANCH_ID_ANG
			 , ANG.COMPETITOR_ID AS COMPETITOR_ID_ANG
			 , CASE WHEN ANG.COMPETITOR_ECHELON_ID = 1 THEN 1 
					WHEN ANG.COMPETITOR_ECHELON_ID = 2 THEN 2
					ELSE 3 END AS ECHELON_ID_ANG
			 , ANG.SUBFRMT_ID AS SUBFRMT_ID_ANG
			 , ANG.FRMT_ID AS FRMT_ID_ANG
			 , ANG.RC_CNTR_ID AS RC_CNTR_ID_ANG
			 , ANG.SQUARE_TRADE AS SQUARE_TRADE_ANG
			 , ANG.REGION_ID AS REGION_ID_ANG
			 , ANG.CITY_ID AS CITY_ID_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE AS SIZE_OF_POPULATION_TYPE_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE2 AS SIZE_OF_POPULATION_TYPE2_ANG
			 , ANG.SEASON AS SEASON_ANG
			 , ANG.LOCAL_FAMILY_BUDGET AS LOCAL_FAMILY_BUDGET_ANG
			 , ANG.LOCAL_FAMILY_BUDGET2 AS LOCAL_FAMILY_BUDGET2_ANG
			 , ANG.HAS_ALCO_LICENCE AS HAS_ALCO_LICENCE_ANG
			 , ANG.TRAFIC AS TRAFIK_ANG
			 , ANG.METR AS METR_ANG
			 , ANG.SALE AS SALE_ANG
			 , ANG.QTY_GORKA AS QTY_GORKA_ANG
			 , ANG.QTY_OHL AS QTY_OHL_ANG
			 , ANG.QTY_Z AS QTY_Z_ANG
			 , d.DIST_km
			 , test.OPEN_DT
			 , ANG.OPEN_DT AS OPEN_DT_ANG
			FROM (
					SELECT M.WHS_ID
						, M.CODE
						, M.BRANCH_ID
						, M.COMPETITOR_ID 
						, M.COMPETITOR_ECHELON_ID 
						, M.SUBFRMT_ID
						, M.FRMT_ID
						, M.RC_CNTR_ID
						, M.REGION_ID
						, M.CITY_ID
						, M.SQUARE_TRADE 
						, M.SIZE_OF_POPULATION_TYPE
						, M.SIZE_OF_POPULATION_TYPE2
						, M.SEASON
						, M.LOCAL_FAMILY_BUDGET
						, M.LOCAL_FAMILY_BUDGET2
						, M.HAS_ALCO_LICENCE
						, M.OPEN_DT
						, COALESCE (m.POTENTIAL_EX, NULLIF (t.POTENTIAL,0)) / 30.5 AS POTENTIAL
						--, m.POTENTIAL_EX AS POTENTIAL
						, p.KLIENT_ZEL
						, COALESCE (m.METR_EX, g.METR) AS METR
						, g.QTY_GORKA
						, g.QTY_OHL
						, g.QTY_Z
					FROM #TEST AS m
					LEFT JOIN SOURCES.DBO.V_WHS AS t
						ON t.WHS_ID = m.WHS_ID
					LEFT JOIN SOURCES.dbo.V_PLACE_PASSPORT AS p
						ON m.WHS_ID = p.WHS_ID
					LEFT JOIN #GORKA_TEST AS g
						ON g.WHS_ID = m.WHS_ID
				 ) AS TEST
			LEFT JOIN (	
						SELECT M.WHS_ID
							, M.CODE
							, M.BRANCH_ID
							, M.COMPETITOR_ID 
							, M.COMPETITOR_ECHELON_ID
							, M.FRMT_ID
							, M.SUBFRMT_ID
							, M.RC_CNTR_ID
							, M.REGION_ID
							, M.CITY_ID
							, M.SQUARE_TRADE
							, M.SIZE_OF_POPULATION_TYPE
							, M.SIZE_OF_POPULATION_TYPE2
							, M.SEASON
							, M.LOCAL_FAMILY_BUDGET
							, M.LOCAL_FAMILY_BUDGET2
							, M.HAS_ALCO_LICENCE
							, M.OPEN_DT
							, T.TRAFIC
							, S.SALE
							, G.METR
							, G.QTY_GORKA
							, G.QTY_OHL
							, G.QTY_Z
						FROM #TTMAIN_ANALOG AS M
						LEFT JOIN #TRAFIK_FOR_ANALOG AS T 
							ON T.WHS_ID = M.WHS_ID
						LEFT JOIN #GORKA AS G 
							ON G.WHS_ID = M.WHS_ID
						LEFT JOIN #SALE_FOR_ANALOG AS S
							ON M.WHS_ID = S.WHS_ID
					) AS ANG
			ON 
					TEST.RC_CNTR_ID = ANG.RC_CNTR_ID
				AND TEST.BRANCH_ID = ANG.BRANCH_ID
			LEFT JOIN #REBRANDING_YES AS re
				ON ANG.WHS_ID = re.WHS_ID
			LEFT JOIN #DIST AS d
				ON TEST.WHS_ID = d.WHS_ID
				AND ANG.WHS_ID = d.WHS_ID_ANG
				;



TRUNCATE TABLE REPORTS.dbo.T_FN_KG_PODBOR;	-- SELECT * FROM REPORTS.dbo.T_FN_KG_PODBOR
INSERT INTO REPORTS.dbo.T_FN_KG_PODBOR
SELECT *
FROM (
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL](0,2)
		UNION									 
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL](1,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL](2,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL](3,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL](4,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL](5,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL](6,1)
	 ) AS a
;


IF OBJECT_ID(N'TEMPDB..#TEST2',N'U') IS NOT NULL DROP TABLE TEMPDB..#TEST2;
SELECT test.*
INTO #TEST2
FROM (
		SELECT DISTINCT WHS_ID
		FROM REPORTS.dbo.T_WHS_TEST_KG
		EXCEPT 
		SELECT DISTINCT WHS_ID
		FROM REPORTS.dbo.T_FN_KG_PODBOR
	) AS a
INNER JOIN REPORTS.dbo.T_WHS_TEST_KG AS test
	ON a.WHS_ID = test.WHS_ID;


TRUNCATE TABLE REPORTS.dbo.T_KG_EXCEL;	-- SELECT * FROM REPORTS.dbo.T_KG_EXCEL
INSERT INTO REPORTS.dbo.T_KG_EXCEL
SELECT  DISTINCT
				TEST.WHS_ID
			 , TEST.CODE
			 , TEST.BRANCH_ID
			 , TEST.COMPETITOR_ID
			 , CASE WHEN TEST.COMPETITOR_ECHELON_ID = 1 THEN 1 
					WHEN TEST.COMPETITOR_ECHELON_ID = 2 THEN 2
					ELSE 3 END AS ECHELON_ID
			 , TEST.SUBFRMT_ID
			 , TEST.FRMT_ID
			 , TEST.RC_CNTR_ID
			 , TEST.SQUARE_TRADE
			 , TEST.REGION_ID
			 , TEST.CITY_ID
			 , TEST.SIZE_OF_POPULATION_TYPE
			 , TEST.SIZE_OF_POPULATION_TYPE2
			 , TEST.SEASON
			 , TEST.LOCAL_FAMILY_BUDGET
			 , TEST.LOCAL_FAMILY_BUDGET2
			 , TEST.HAS_ALCO_LICENCE
			 , TEST.KLIENT_ZEL AS TRAFIK
			 , TEST.POTENTIAL AS SALE
			 , TEST.METR
			 , TEST.QTY_GORKA
			 , TEST.QTY_OHL
			 , TEST.QTY_Z
			 , CASE WHEN re.WHS_ID IS NOT NULL THEN 1 ELSE 2 END AS FLAG_REBR
			 , ANG.WHS_ID AS WHS_ID_ANG
			 , ANG.CODE AS CODE_ANG
			 , ANG.BRANCH_ID AS BRANCH_ID_ANG
			 , ANG.COMPETITOR_ID AS COMPETITOR_ID_ANG
			 , CASE WHEN ANG.COMPETITOR_ID = 1 THEN 1 
					WHEN ANG.COMPETITOR_ID = 2 THEN 2
					ELSE 3 END AS ECHELON_ID_ANG
			 , ANG.SUBFRMT_ID AS SUBFRMT_ID_ANG
			 , ANG.FRMT_ID AS FRMT_ID_ANG
			 , ANG.RC_CNTR_ID AS RC_CNTR_ID_ANG
			 , ANG.SQUARE_TRADE AS SQUARE_TRADE_ANG
			 , ANG.REGION_ID AS REGION_ID_ANG
			 , ANG.CITY_ID AS CITY_ID_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE AS SIZE_OF_POPULATION_TYPE_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE2 AS SIZE_OF_POPULATION_TYPE2_ANG
			 , ANG.SEASON AS SEASON_ANG
			 , ANG.LOCAL_FAMILY_BUDGET AS LOCAL_FAMILY_BUDGET_ANG
			 , ANG.LOCAL_FAMILY_BUDGET2 AS LOCAL_FAMILY_BUDGET2_ANG
			 , ANG.HAS_ALCO_LICENCE AS HAS_ALCO_LICENCE_ANG
			 , ANG.TRAFIC AS TRAFIK_ANG
			 , ANG.METR AS METR_ANG
			 , ANG.SALE AS SALE_ANG
			 , ANG.QTY_GORKA AS QTY_GORKA_ANG
			 , ANG.QTY_OHL AS QTY_OHL_ANG
			 , ANG.QTY_Z AS QTY_Z_ANG
			 , d.DIST_km
			 , test.OPEN_DT
			 , ANG.OPEN_DT AS OPEN_DT_ANG
			FROM (
					SELECT M.WHS_ID
						, M.CODE
						, M.BRANCH_ID
						, M.COMPETITOR_ID 
						, M.COMPETITOR_ECHELON_ID 
						, M.SUBFRMT_ID
						, M.FRMT_ID
						, M.RC_CNTR_ID
						, M.REGION_ID
						, M.CITY_ID
						, M.SQUARE_TRADE 
						, M.SIZE_OF_POPULATION_TYPE
						, M.SIZE_OF_POPULATION_TYPE2
						, M.SEASON
						, M.LOCAL_FAMILY_BUDGET
						, M.LOCAL_FAMILY_BUDGET2
						, M.HAS_ALCO_LICENCE
						, M.OPEN_DT
						, COALESCE (m.POTENTIAL_EX, NULLIF (t.POTENTIAL,0)) / 30.5 AS POTENTIAL
						--, m.POTENTIAL_EX AS POTENTIAL
						, p.KLIENT_ZEL
						, COALESCE (m.METR_EX, g.METR) AS METR
						, g.QTY_GORKA
						, g.QTY_OHL
						, g.QTY_Z
					FROM #TEST AS m
					INNER JOIN #TEST2 AS a
						ON m.WHS_ID = a.WHS_ID
					LEFT JOIN SOURCES.DBO.V_WHS AS t
						ON t.WHS_ID = m.WHS_ID
					LEFT JOIN SOURCES.dbo.V_PLACE_PASSPORT AS p
						ON m.WHS_ID = p.WHS_ID
					LEFT JOIN #GORKA_TEST AS g
						ON g.WHS_ID = m.WHS_ID
				 ) AS TEST
			LEFT JOIN (	
						SELECT M.WHS_ID
							, M.CODE
							, M.BRANCH_ID
							, M.COMPETITOR_ID 
							, M.COMPETITOR_ECHELON_ID
							, M.FRMT_ID
							, M.SUBFRMT_ID
							, M.RC_CNTR_ID
							, M.REGION_ID
							, M.CITY_ID
							, M.SQUARE_TRADE
							, M.SIZE_OF_POPULATION_TYPE
							, M.SIZE_OF_POPULATION_TYPE2
							, M.SEASON
							, M.LOCAL_FAMILY_BUDGET
							, M.LOCAL_FAMILY_BUDGET2
							, M.HAS_ALCO_LICENCE
							, M.OPEN_DT
							, T.TRAFIC
							, S.SALE
							, G.METR
							, G.QTY_GORKA
							, G.QTY_OHL
							, G.QTY_Z
						FROM #TTMAIN_ANALOG AS M
						LEFT JOIN #TRAFIK_FOR_ANALOG AS T 
							ON T.WHS_ID = M.WHS_ID
						LEFT JOIN #GORKA AS G 
							ON G.WHS_ID = M.WHS_ID
						LEFT JOIN #SALE_FOR_ANALOG AS S
							ON M.WHS_ID = S.WHS_ID
					) AS ANG
			ON 
					TEST.RC_CNTR_ID = ANG.RC_CNTR_ID
				AND TEST.BRANCH_ID = ANG.BRANCH_ID
			LEFT JOIN #REBRANDING_YES AS re
				ON ANG.WHS_ID = re.WHS_ID
			LEFT JOIN #DIST AS d
				ON TEST.WHS_ID = d.WHS_ID
				AND ANG.WHS_ID = d.WHS_ID_ANG;


INSERT INTO REPORTS.dbo.T_FN_KG_PODBOR
SELECT *
FROM (
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2](0,1)
		UNION									 
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2](1,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2](2,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2](3,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2](4,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2](5,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2](6,1)
	 ) AS a
;



IF OBJECT_ID(N'TEMPDB..#TEST_BAD',N'U') IS NOT NULL DROP TABLE TEMPDB..#TEST_BAD;
SELECT test.*
INTO #TEST_BAD
FROM (
		SELECT DISTINCT WHS_ID
		FROM REPORTS.dbo.T_WHS_TEST_KG
		EXCEPT 
		SELECT DISTINCT WHS_ID
		FROM REPORTS.dbo.T_FN_KG_PODBOR
	) AS a
INNER JOIN REPORTS.dbo.T_WHS_TEST_KG AS test
	ON a.WHS_ID = test.WHS_ID;


TRUNCATE TABLE NEWBIE.dbo.T_KG_BAD_TEST;		--	SELECT * FROM NEWBIE.dbo.T_KG_BAD_TEST
INSERT INTO NEWBIE.dbo.T_KG_BAD_TEST
SELECT 
  s.SEASON_FLAG AS [Флаг Сезон]
, s.SUBFRMT_FLAG AS [Флаг субформат]
, s.BRANCH_FLAG AS [Город/Филиал/Регион]
, s.SALE_FLAG_2 AS [Оборот Флаг 2]
, s.SALE_FLAG AS [Оборот Флаг]
, s.METR_FLAG AS [Метраж Флаг]
, s.METR_FLAG_2 AS [Метраж Флаг 2]
, s.BUDG_FLAG AS [Тип бюджета Флаг]
, s.POPUL_FLAG AS [Численность НП Флаг]
, s.COMP_FLAG AS [Конкурент Флаг]
, s.ALCO_FLAG AS [Алко Флаг]
, s.SQUARE_FLAG AS [Площадь Флаг]
, s.FLAG_REBR AS [Флаг Ребрендинг]
, s.GORKA_FLAG AS [Горка флаг]
, s.BONETA_FLAG AS [Бонета флаг]
, s.TR_FLAG AS [Трафик Флаг]
, s.DIST_km AS [Дистанция]
	 , s.OPEN_DT AS [Дата открытия]
	 , s.OPEN_DT_ANG AS [Дата открытия аналог]
	 , s.WHS_ID
	 , w.NAME AS [TT]
	 , s.CITY_ID 
	 , w.CITY AS [Город]
	 , s.BRANCH_ID
	 , w.BRANCH AS [Филиал]
	 , s.COMPETITOR_ID AS [Основной Конкурент]
	 , s.ECHELON_ID AS [Эшелон]
	 , s.SUBFRMT_ID
	 , w.SUBFRMT AS [Субформат]
	 , s.RC_CNTR_ID
	 , w.REGION AS [Регион]
	 , s.SQUARE_TRADE AS [Площадь]
	 , s.SIZE_OF_POPULATION_TYPE AS [Численность 1]
	 , s.SIZE_OF_POPULATION_TYPE2 AS [Численность 2]
	 , s.SEASON AS [Сезон]
	 , s.LOCAL_FAMILY_BUDGET AS [Бюджет]
	 , s.HAS_ALCO_LICENCE AS [Алко]
	-- , s.TRAFIK AS [Трафик]
	 , s.METR AS [Метр]
	 , s.QTY_GORKA AS [Горка, шт]
	 , s.QTY_OHL AS [Бонета О, шт]
	 , s.QTY_Z AS [Бонета З, шт]
	 , CAST (s.SALE AS REAL) AS [Продажи]
	-- , s.RN
	 , s.WHS_ID_ANG
	 , w1.NAME AS [TT ANG]
	 , s.CITY_ID_ANG
	 , w1.CITY AS [Город ANG]
	 , s.BRANCH_ID_ANG
	 , W1.BRANCH AS [Филиал ANG]
	 , s.COMPETITOR_ID_ANG AS [Основной Конкурент ANG]
	 , s.ECHELON_ID_ANG AS [Эшелон ANG]
	 , s.SUBFRMT_ID_ANG
	 , w1.SUBFRMT AS [Субформат ANG]
	 , s.RC_CNTR_ID_ANG
	 , w1.REGION AS [Регион ANG]
	 , s.SQUARE_TRADE_ANG AS [Площадь ANG]
	 , s.SIZE_OF_POPULATION_TYPE_ANG AS [Численность 1 ANG]
	 , s.SIZE_OF_POPULATION_TYPE2_ANG AS [Численность 2 ANG]
	 , s.SEASON_ANG AS [Сезон ANG]
	 , s.LOCAL_FAMILY_BUDGET_ANG AS [Бюджет ANG]
	 , s.HAS_ALCO_LICENCE_ANG AS [Алко ANG]
	-- , s.TRAFIK_ANG AS [Трафик ANG]
	 , s.METR_ANG AS [Метр ANG]
	 , s.QTY_GORKA_ANG AS [Горка, шт ANG]
	 , s.QTY_OHL_ANG AS [Бонета О, шт ANG]
	 , s.QTY_Z_ANG AS [Бонета З, шт ANG]
	 , s.SALE_ANG AS [Продажи ANG]
	 , ABS(1.0-(CAST(TRAFIk AS FLOAT) / CAST(TRAFIk_ANG AS FLOAT))) AS [% Трафик]
	 , ABS(1.0-(CAST(s.METR AS FLOAT) / CAST(METR_ANG AS FLOAT))) AS [% Метраж]
	 , ABS(1.0-(CAST(S.SQUARE_TRADE AS FLOAT) / CAST(NULLIF (SQUARE_TRADE_ANG, 0) AS FLOAT))) AS [% Площадь]
	 , ABS(1.0-(CAST(S.SALE AS FLOAT) / CAST(NULLIF (s.SALE_ANG, 0) AS FLOAT))) AS [% Оборот]
	 , ROW_NUMBER () OVER (PARTITION BY s.WHS_ID ORDER BY SEASON_FLAG, SUBFRMT_FLAG, BRANCH_FLAG, SALE_FLAG_2, METR_FLAG_2, BUDG_FLAG, POPUL_FLAG, COMP_FLAG, ALCO_FLAG, SQUARE_FLAG) AS RN1
FROM [REPORTS].dbo.[V_KG_EXCEL_BASE_PODBOR2] AS s
INNER JOIN #TEST_BAD AS bad
	ON s.WHS_ID = bad.WHS_ID
LEFT JOIN SOURCES.dbo.V_WHS AS w
	ON s.WHS_ID = w.WHS_ID
LEFT JOIN SOURCES.dbo.V_WHS AS W1
	ON s.WHS_ID_ANG = w1.WHS_ID;







--============= Положительные продажи ================--



TRUNCATE TABLE REPORTS.dbo.T_KG_EXCEL;		--	SELECT * FROM REPORTS.dbo.T_KG_EXCEL
INSERT INTO REPORTS.dbo.T_KG_EXCEL 
SELECT  DISTINCT
				TEST.WHS_ID
			 , TEST.CODE
			 , TEST.BRANCH_ID
			 , TEST.COMPETITOR_ID
			 , CASE WHEN TEST.COMPETITOR_ECHELON_ID = 1 THEN 1 
					WHEN TEST.COMPETITOR_ECHELON_ID = 2 THEN 2
					ELSE 3 END AS ECHELON_ID
			 , TEST.SUBFRMT_ID
			 , TEST.FRMT_ID
			 , TEST.RC_CNTR_ID
			 , TEST.SQUARE_TRADE
			 , TEST.REGION_ID
			 , TEST.CITY_ID
			 , TEST.SIZE_OF_POPULATION_TYPE
			 , TEST.SIZE_OF_POPULATION_TYPE2
			 , TEST.SEASON
			 , TEST.LOCAL_FAMILY_BUDGET
			 , TEST.LOCAL_FAMILY_BUDGET2
			 , TEST.HAS_ALCO_LICENCE
			 , TEST.KLIENT_ZEL AS TRAFIK
			 , TEST.POTENTIAL AS SALE
			 , TEST.METR
			 , TEST.QTY_GORKA
			 , TEST.QTY_OHL
			 , TEST.QTY_Z
			 , CASE WHEN re.WHS_ID IS NOT NULL THEN 1 ELSE 2 END AS FLAG_REBR
			 , ANG.WHS_ID AS WHS_ID_ANG
			 , ANG.CODE AS CODE_ANG
			 , ANG.BRANCH_ID AS BRANCH_ID_ANG
			 , ANG.COMPETITOR_ID AS COMPETITOR_ID_ANG
			 , CASE WHEN ANG.COMPETITOR_ECHELON_ID = 1 THEN 1 
					WHEN ANG.COMPETITOR_ECHELON_ID = 2 THEN 2
					ELSE 3 END AS ECHELON_ID_ANG
			 , ANG.SUBFRMT_ID AS SUBFRMT_ID_ANG
			 , ANG.FRMT_ID AS FRMT_ID_ANG
			 , ANG.RC_CNTR_ID AS RC_CNTR_ID_ANG
			 , ANG.SQUARE_TRADE AS SQUARE_TRADE_ANG
			 , ANG.REGION_ID AS REGION_ID_ANG
			 , ANG.CITY_ID AS CITY_ID_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE AS SIZE_OF_POPULATION_TYPE_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE2 AS SIZE_OF_POPULATION_TYPE2_ANG
			 , ANG.SEASON AS SEASON_ANG
			 , ANG.LOCAL_FAMILY_BUDGET AS LOCAL_FAMILY_BUDGET_ANG
			 , ANG.LOCAL_FAMILY_BUDGET2 AS LOCAL_FAMILY_BUDGET2_ANG
			 , ANG.HAS_ALCO_LICENCE AS HAS_ALCO_LICENCE_ANG
			 , ANG.TRAFIC AS TRAFIK_ANG
			 , ANG.METR AS METR_ANG
			 , ANG.SALE AS SALE_ANG
			 , ANG.QTY_GORKA AS QTY_GORKA_ANG
			 , ANG.QTY_OHL AS QTY_OHL_ANG
			 , ANG.QTY_Z AS QTY_Z_ANG
			 , d.DIST_km
			 , test.OPEN_DT
			 , ANG.OPEN_DT AS OPEN_DT_ANG
			FROM (
					SELECT M.WHS_ID
						, M.CODE
						, M.BRANCH_ID
						, M.COMPETITOR_ID 
						, M.COMPETITOR_ECHELON_ID 
						, M.SUBFRMT_ID
						, M.FRMT_ID
						, M.RC_CNTR_ID
						, M.REGION_ID
						, M.CITY_ID
						, M.SQUARE_TRADE 
						, M.SIZE_OF_POPULATION_TYPE
						, M.SIZE_OF_POPULATION_TYPE2
						, M.SEASON
						, M.LOCAL_FAMILY_BUDGET
						, M.LOCAL_FAMILY_BUDGET2
						, M.HAS_ALCO_LICENCE
						, M.OPEN_DT
						, COALESCE (m.POTENTIAL_EX, NULLIF (t.POTENTIAL,0)) / 30.5 AS POTENTIAL
						--, m.POTENTIAL_EX AS POTENTIAL
						, p.KLIENT_ZEL
						, COALESCE (m.METR_EX, g.METR) AS METR
						, g.QTY_GORKA
						, g.QTY_OHL
						, g.QTY_Z
					FROM #TEST AS m
					LEFT JOIN SOURCES.DBO.V_WHS AS t
						ON t.WHS_ID = m.WHS_ID
					LEFT JOIN SOURCES.dbo.V_PLACE_PASSPORT AS p
						ON m.WHS_ID = p.WHS_ID
					LEFT JOIN #GORKA_TEST AS g
						ON g.WHS_ID = m.WHS_ID
				 ) AS TEST
			LEFT JOIN (	
						SELECT M.WHS_ID
							, M.CODE
							, M.BRANCH_ID
							, M.COMPETITOR_ID 
							, M.COMPETITOR_ECHELON_ID
							, M.FRMT_ID
							, M.SUBFRMT_ID
							, M.RC_CNTR_ID
							, M.REGION_ID
							, M.CITY_ID
							, M.SQUARE_TRADE
							, M.SIZE_OF_POPULATION_TYPE
							, M.SIZE_OF_POPULATION_TYPE2
							, M.SEASON
							, M.LOCAL_FAMILY_BUDGET
							, M.LOCAL_FAMILY_BUDGET2
							, M.HAS_ALCO_LICENCE
							, M.OPEN_DT
							, T.TRAFIC
							, S.SALE
							, G.METR
							, G.QTY_GORKA
							, G.QTY_OHL
							, G.QTY_Z
						FROM #TTMAIN_ANALOG AS M
						LEFT JOIN #TRAFIK_FOR_ANALOG AS T 
							ON T.WHS_ID = M.WHS_ID
						LEFT JOIN #GORKA AS G 
							ON G.WHS_ID = M.WHS_ID
						LEFT JOIN #SALE_FOR_ANALOG AS S
							ON M.WHS_ID = S.WHS_ID
					) AS ANG
			ON 
					TEST.RC_CNTR_ID = ANG.RC_CNTR_ID
				AND TEST.BRANCH_ID = ANG.BRANCH_ID
			LEFT JOIN #REBRANDING_YES AS re
				ON ANG.WHS_ID = re.WHS_ID
			LEFT JOIN #DIST AS d
				ON TEST.WHS_ID = d.WHS_ID
				AND ANG.WHS_ID = d.WHS_ID_ANG
				;




TRUNCATE TABLE REPORTS.dbo.T_FN_KG_PODBOR_PLUS;
INSERT INTO REPORTS.dbo.T_FN_KG_PODBOR_PLUS
SELECT *
FROM (
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PLUS](0,1)
		UNION									 
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PLUS](1,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PLUS](2,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PLUS](3,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PLUS](4,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PLUS](5,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PLUS](6,1)
	 ) AS a
;


IF OBJECT_ID(N'TEMPDB..#TEST2_PLUS',N'U') IS NOT NULL DROP TABLE TEMPDB..#TEST2_PLUS;
SELECT test.*
INTO #TEST2_PLUS
FROM (
		SELECT DISTINCT WHS_ID
		FROM REPORTS.dbo.T_WHS_TEST_KG
		EXCEPT 
		SELECT DISTINCT WHS_ID
		FROM REPORTS.dbo.T_FN_KG_PODBOR_PLUS
	) AS a
INNER JOIN REPORTS.dbo.T_WHS_TEST_KG AS test
	ON a.WHS_ID = test.WHS_ID;


TRUNCATE TABLE REPORTS.dbo.T_KG_EXCEL; 
INSERT INTO REPORTS.dbo.T_KG_EXCEL
SELECT  DISTINCT
				TEST.WHS_ID
			 , TEST.CODE
			 , TEST.BRANCH_ID
			 , TEST.COMPETITOR_ID
			 , CASE WHEN TEST.COMPETITOR_ECHELON_ID = 1 THEN 1 
					WHEN TEST.COMPETITOR_ECHELON_ID = 2 THEN 2
					ELSE 3 END AS ECHELON_ID
			 , TEST.SUBFRMT_ID
			 , TEST.FRMT_ID
			 , TEST.RC_CNTR_ID
			 , TEST.SQUARE_TRADE
			 , TEST.REGION_ID
			 , TEST.CITY_ID
			 , TEST.SIZE_OF_POPULATION_TYPE
			 , TEST.SIZE_OF_POPULATION_TYPE2
			 , TEST.SEASON
			 , TEST.LOCAL_FAMILY_BUDGET
			 , TEST.LOCAL_FAMILY_BUDGET2
			 , TEST.HAS_ALCO_LICENCE
			 , TEST.KLIENT_ZEL AS TRAFIK
			 , TEST.POTENTIAL AS SALE
			 , TEST.METR
			 , TEST.QTY_GORKA
			 , TEST.QTY_OHL
			 , TEST.QTY_Z
			 , CASE WHEN re.WHS_ID IS NOT NULL THEN 1 ELSE 2 END AS FLAG_REBR
			 , ANG.WHS_ID AS WHS_ID_ANG
			 , ANG.CODE AS CODE_ANG
			 , ANG.BRANCH_ID AS BRANCH_ID_ANG
			 , ANG.COMPETITOR_ID AS COMPETITOR_ID_ANG
			 , CASE WHEN ANG.COMPETITOR_ID = 1 THEN 1 
					WHEN ANG.COMPETITOR_ID = 2 THEN 2
					ELSE 3 END AS ECHELON_ID_ANG
			 , ANG.SUBFRMT_ID AS SUBFRMT_ID_ANG
			 , ANG.FRMT_ID AS FRMT_ID_ANG
			 , ANG.RC_CNTR_ID AS RC_CNTR_ID_ANG
			 , ANG.SQUARE_TRADE AS SQUARE_TRADE_ANG
			 , ANG.REGION_ID AS REGION_ID_ANG
			 , ANG.CITY_ID AS CITY_ID_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE AS SIZE_OF_POPULATION_TYPE_ANG
			 , ANG.SIZE_OF_POPULATION_TYPE2 AS SIZE_OF_POPULATION_TYPE2_ANG
			 , ANG.SEASON AS SEASON_ANG
			 , ANG.LOCAL_FAMILY_BUDGET AS LOCAL_FAMILY_BUDGET_ANG
			 , ANG.LOCAL_FAMILY_BUDGET2 AS LOCAL_FAMILY_BUDGET2_ANG
			 , ANG.HAS_ALCO_LICENCE AS HAS_ALCO_LICENCE_ANG
			 , ANG.TRAFIC AS TRAFIK_ANG
			 , ANG.METR AS METR_ANG
			 , ANG.SALE AS SALE_ANG
			 , ANG.QTY_GORKA AS QTY_GORKA_ANG
			 , ANG.QTY_OHL AS QTY_OHL_ANG
			 , ANG.QTY_Z AS QTY_Z_ANG
			 , d.DIST_km
			 , test.OPEN_DT
			 , ANG.OPEN_DT AS OPEN_DT_ANG
			FROM (
					SELECT M.WHS_ID
						, M.CODE
						, M.BRANCH_ID
						, M.COMPETITOR_ID 
						, M.COMPETITOR_ECHELON_ID 
						, M.SUBFRMT_ID
						, M.FRMT_ID
						, M.RC_CNTR_ID
						, M.REGION_ID
						, M.CITY_ID
						, M.SQUARE_TRADE 
						, M.SIZE_OF_POPULATION_TYPE
						, M.SIZE_OF_POPULATION_TYPE2
						, M.SEASON
						, M.LOCAL_FAMILY_BUDGET
						, M.LOCAL_FAMILY_BUDGET2
						, M.HAS_ALCO_LICENCE
						, M.OPEN_DT
						, COALESCE (m.POTENTIAL_EX, NULLIF (t.POTENTIAL,0)) / 30.5 AS POTENTIAL
						--, m.POTENTIAL_EX AS POTENTIAL
						, p.KLIENT_ZEL
						, COALESCE (m.METR_EX, g.METR) AS METR
						, g.QTY_GORKA
						, g.QTY_OHL
						, g.QTY_Z
					FROM #TEST AS m
					INNER JOIN #TEST2_PLUS AS a
						ON m.WHS_ID = a.WHS_ID
					LEFT JOIN SOURCES.DBO.V_WHS AS t
						ON t.WHS_ID = m.WHS_ID
					LEFT JOIN SOURCES.dbo.V_PLACE_PASSPORT AS p
						ON m.WHS_ID = p.WHS_ID
					LEFT JOIN #GORKA_TEST AS g
						ON g.WHS_ID = m.WHS_ID
				 ) AS TEST
			LEFT JOIN (	
						SELECT M.WHS_ID
							, M.CODE
							, M.BRANCH_ID
							, M.COMPETITOR_ID 
							, M.COMPETITOR_ECHELON_ID
							, M.FRMT_ID
							, M.SUBFRMT_ID
							, M.RC_CNTR_ID
							, M.REGION_ID
							, M.CITY_ID
							, M.SQUARE_TRADE
							, M.SIZE_OF_POPULATION_TYPE
							, M.SIZE_OF_POPULATION_TYPE2
							, M.SEASON
							, M.LOCAL_FAMILY_BUDGET
							, M.LOCAL_FAMILY_BUDGET2
							, M.HAS_ALCO_LICENCE
							, M.OPEN_DT
							, T.TRAFIC
							, S.SALE
							, G.METR
							, G.QTY_GORKA
							, G.QTY_OHL
							, G.QTY_Z
						FROM #TTMAIN_ANALOG AS M
						LEFT JOIN #TRAFIK_FOR_ANALOG AS T 
							ON T.WHS_ID = M.WHS_ID
						LEFT JOIN #GORKA AS G 
							ON G.WHS_ID = M.WHS_ID
						LEFT JOIN #SALE_FOR_ANALOG AS S
							ON M.WHS_ID = S.WHS_ID
					) AS ANG
			ON 
					TEST.RC_CNTR_ID = ANG.RC_CNTR_ID
				AND TEST.BRANCH_ID = ANG.BRANCH_ID
			LEFT JOIN #REBRANDING_YES AS re
				ON ANG.WHS_ID = re.WHS_ID
			LEFT JOIN #DIST AS d
				ON TEST.WHS_ID = d.WHS_ID
				AND ANG.WHS_ID = d.WHS_ID_ANG;


INSERT INTO REPORTS.dbo.T_FN_KG_PODBOR_PLUS
SELECT *
FROM (
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2_PLUS](0,1)
		UNION									 
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2_PLUS](1,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2_PLUS](2,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2_PLUS](3,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2_PLUS](4,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2_PLUS](5,1)
		UNION 									   
		SELECT * FROM REPORTS.[dbo].[FN_KG_EXCEL_PODBOR2_PLUS](6,1)
	 ) AS a
;



IF OBJECT_ID(N'TEMPDB..#TEST_BAD_PLUS',N'U') IS NOT NULL DROP TABLE TEMPDB..#TEST_BAD_PLUS;
SELECT test.*
INTO #TEST_BAD_PLUS
FROM (
		SELECT DISTINCT WHS_ID
		FROM REPORTS.dbo.T_WHS_TEST_KG
		EXCEPT 
		SELECT DISTINCT WHS_ID
		FROM REPORTS.dbo.T_FN_KG_PODBOR_PLUS
	) AS a
INNER JOIN REPORTS.dbo.T_WHS_TEST_KG AS test
	ON a.WHS_ID = test.WHS_ID;



TRUNCATE TABLE NEWBIE.dbo.T_KG_BAD_TEST_PLUS;		--	SELECT * FROM NEWBIE.dbo.T_KG_BAD_TEST_PLUS
INSERT INTO NEWBIE.dbo.T_KG_BAD_TEST_PLUS
SELECT 
  s.SEASON_FLAG AS [Флаг Сезон]
, s.SUBFRMT_FLAG AS [Флаг субформат]
, s.BRANCH_FLAG AS [Город/Филиал/Регион]
, s.SALE_FLAG_2 AS [Оборот Флаг 2]
, s.SALE_FLAG AS [Оборот Флаг]
, s.METR_FLAG AS [Метраж Флаг]
, s.METR_FLAG_2 AS [Метраж Флаг 2]
, s.BUDG_FLAG AS [Тип бюджета Флаг]
, s.POPUL_FLAG AS [Численность НП Флаг]
, s.COMP_FLAG AS [Конкурент Флаг]
, s.ALCO_FLAG AS [Алко Флаг]
, s.SQUARE_FLAG AS [Площадь Флаг]
, s.FLAG_REBR AS [Флаг Ребрендинг]
, s.GORKA_FLAG AS [Горка флаг]
, s.BONETA_FLAG AS [Бонета флаг]
, s.TR_FLAG AS [Трафик Флаг]
, s.DIST_km AS [Дистанция]
	 , s.OPEN_DT AS [Дата открытия]
	 , s.OPEN_DT_ANG AS [Дата открытия аналог]
	 , s.WHS_ID
	 , w.NAME AS [TT]
	 , s.CITY_ID 
	 , w.CITY AS [Город]
	 , s.BRANCH_ID
	 , w.BRANCH AS [Филиал]
	 , s.COMPETITOR_ID AS [Основной Конкурент]
	 , s.ECHELON_ID AS [Эшелон]
	 , s.SUBFRMT_ID
	 , w.SUBFRMT AS [Субформат]
	 , s.RC_CNTR_ID
	 , w.REGION AS [Регион]
	 , s.SQUARE_TRADE AS [Площадь]
	 , s.SIZE_OF_POPULATION_TYPE AS [Численность 1]
	 , s.SIZE_OF_POPULATION_TYPE2 AS [Численность 2]
	 , s.SEASON AS [Сезон]
	 , s.LOCAL_FAMILY_BUDGET AS [Бюджет]
	 , s.HAS_ALCO_LICENCE AS [Алко]
	-- , s.TRAFIK AS [Трафик]
	 , s.METR AS [Метр]
	 , s.QTY_GORKA AS [Горка, шт]
	 , s.QTY_OHL AS [Бонета О, шт]
	 , s.QTY_Z AS [Бонета З, шт]
	 , CAST (s.SALE AS REAL) AS [Продажи]
	-- , s.RN
	 , s.WHS_ID_ANG
	 , w1.NAME AS [TT ANG]
	 , s.CITY_ID_ANG
	 , w1.CITY AS [Город ANG]
	 , s.BRANCH_ID_ANG
	 , W1.BRANCH AS [Филиал ANG]
	 , s.COMPETITOR_ID_ANG AS [Основной Конкурент ANG]
	 , s.ECHELON_ID_ANG AS [Эшелон ANG]
	 , s.SUBFRMT_ID_ANG
	 , w1.SUBFRMT AS [Субформат ANG]
	 , s.RC_CNTR_ID_ANG
	 , w1.REGION AS [Регион ANG]
	 , s.SQUARE_TRADE_ANG AS [Площадь ANG]
	 , s.SIZE_OF_POPULATION_TYPE_ANG AS [Численность 1 ANG]
	 , s.SIZE_OF_POPULATION_TYPE2_ANG AS [Численность 2 ANG]
	 , s.SEASON_ANG AS [Сезон ANG]
	 , s.LOCAL_FAMILY_BUDGET_ANG AS [Бюджет ANG]
	 , s.HAS_ALCO_LICENCE_ANG AS [Алко ANG]
	-- , s.TRAFIK_ANG AS [Трафик ANG]
	 , s.METR_ANG AS [Метр ANG]
	 , s.QTY_GORKA_ANG AS [Горка, шт ANG]
	 , s.QTY_OHL_ANG AS [Бонета О, шт ANG]
	 , s.QTY_Z_ANG AS [Бонета З, шт ANG]
	 , s.SALE_ANG AS [Продажи ANG]
	 , ABS(1.0-(CAST(TRAFIk AS FLOAT) / CAST(TRAFIk_ANG AS FLOAT))) AS [% Трафик]
	 , ABS(1.0-(CAST(s.METR AS FLOAT) / CAST(METR_ANG AS FLOAT))) AS [% Метраж]
	 , ABS(1.0-(CAST(S.SQUARE_TRADE AS FLOAT) / CAST(NULLIF (SQUARE_TRADE_ANG, 0) AS FLOAT))) AS [% Площадь]
	 , (1.0-(CAST(S.SALE AS FLOAT) / CAST(NULLIF (s.SALE_ANG, 0) AS FLOAT))) AS [% Оборот]
	 , ROW_NUMBER () OVER (PARTITION BY s.WHS_ID ORDER BY SEASON_FLAG, SUBFRMT_FLAG, BRANCH_FLAG, SALE_FLAG_2, METR_FLAG_2, BUDG_FLAG, POPUL_FLAG, COMP_FLAG, ALCO_FLAG, SQUARE_FLAG) AS RN1
FROM [REPORTS].dbo.[V_KG_EXCEL_BASE_PODBOR2] AS s
INNER JOIN #TEST_BAD_PLUS AS bad
	ON s.WHS_ID = bad.WHS_ID
LEFT JOIN SOURCES.dbo.V_WHS AS w
	ON s.WHS_ID = w.WHS_ID
LEFT JOIN SOURCES.dbo.V_WHS AS W1
	ON s.WHS_ID_ANG = w1.WHS_ID;

END;


GO


